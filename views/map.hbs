        <div class="content-page">
            <div class="container-fluid">
                <div class="row">
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex justify-content-center align-items-center">
                                    <div class="d-flex flex-column text-center"> 
                                        <h1 class="">Mapa de la Región Metropolitana</h1>
                                        <p class=""><strong>Hora:</strong> {{hora}}</p>
                                        <div class="w-75 h-75" id="map"></div>
                                     </div>
                                </div>
                            </div>
                        </div>
                </div>
            
            </div>
        </div>
        <!-- END Contenido dinámico -->
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script>
        // Coordenadas iniciales y niveles de zoom
        const initialCoordinates = [-33.4372, -70.6506]; // Coordenadas de Santiago, Chile
        const initialZoomLevel = 16; // Nivel de zoom inicial
        const minZoomLevel = 13; // Nivel de zoom mínimo permitido
        const maxZoomLevel = 19; // Nivel de zoom máximo permitido

        // Inicializar el mapa con las coordenadas y el nivel de zoom inicial
        var map = L.map('map', {
            center: initialCoordinates,
            zoom: initialZoomLevel,
            minZoom: minZoomLevel,
            maxZoom: maxZoomLevel,
            maxBounds: L.latLngBounds(
                L.latLng(-33.0, -71.0), // Esquina suroeste (lat, lng)
                L.latLng(-33.7, -70.3)  // Esquina noreste (lat, lng)
            )
        });

        // Añadir capa de mapa base (ejemplo con OpenStreetMap)
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: maxZoomLevel,
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        // Función para calcular el color del círculo en función del porcentaje (0 a 100)
        function getColorByPercentage(percentage) {
            // Interpolación lineal entre rojo (0%) y azul (100%)
            var red = 255 * (100 - percentage) / 100;
            var blue = 255 * percentage / 100;
            return `rgb(${red}, 0, ${blue})`;
        }

        // Función para calcular el radio en función del tamaño del contenedor del mapa
        function calculateRadius(percentage) {
            var mapContainer = document.getElementById('map');
            var width = mapContainer.clientWidth;
            var height = mapContainer.clientHeight;
            var minDimension = Math.min(width, height);
            return (percentage / 100) * minDimension;
        }        

        // Verificar las ubicaciones en la consola
        var locations = {{{json ubicaciones}}};
        console.log('Ubicaciones en la plantilla:', locations);

        // Array para almacenar los marcadores
        var markers = [];

        // Función para añadir los marcadores al mapa
        function addMarkers() {
            locations.forEach(function(location) {
                if (location.latitud && location.longitud) {
                    var marker = L.marker([location.latitud, location.longitud]);
                    // Definir el porcentaje del radio
                    var percentage = location.densidad;
                    var radiusInPixels = calculateRadius(percentage);

                    // Convertir el radio de píxeles a metros (esto es aproximado y depende del nivel de zoom y la latitud)
                    var radiusInMeters = map.containerPointToLatLng([0, 0]).distanceTo(map.containerPointToLatLng([radiusInPixels, 0]));

                    // Calcular el color del círculo en función del porcentaje
                    var color = getColorByPercentage(percentage);

                    // Agregar un círculo en la ubicación especificada
                    var circle = L.circle([location.latitud, location.longitud], {
                        color: color,
                        fillColor: color,
                        fillOpacity: 0.5,
                        radius: location.densidad // Radio en metros
                    }).addTo(map);

                    marker.bindPopup(`<b>${location.codigoParadero}</b><br>${location.latitud}, ${location.longitud}<br>${location.densidad}`);
                    markers.push(marker);
                } else {
                    console.error('Error en la ubicación:', location.error);
                }
            });

            // Añadir los marcadores al mapa
            markers.forEach(function(marker) {
                marker.addTo(map);
            });
        }

        // Añadir los marcadores iniciales al cargar la página
        addMarkers();

        // Función para actualizar los marcadores visibles
        function updateVisibleMarkers() {
            var bounds = map.getBounds();
            var currentZoom = map.getZoom();
            
            // Verificar el nivel de zoom
            if (currentZoom >= 16 && currentZoom <= 19) {
                markers.forEach(function(marker) {
                    var isVisible = bounds.contains(marker.getLatLng());
                    if (isVisible) {
                        marker.addTo(map);
                    } else {
                        map.removeLayer(marker);
                    }
                });
            } else {
                // Si el zoom no está en el rango deseado, ocultar todos los marcadores
                markers.forEach(function(marker) {
                    map.removeLayer(marker);
                });
            }
        }

        // Llamar a updateVisibleMarkers al iniciar y al mover el mapa
        map.on('moveend', function() {
            updateVisibleMarkers();
        });

    </script>


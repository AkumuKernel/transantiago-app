
{{#if error}}
    <div class="alert alert-danger">{{error}}</div>
{{else}}
    
            <div class="content-page">
            <div class="container-fluid">
            <!-- start page title -->
                    <div class="row">
                        <div class="col-12">
                            <div class="page-title-box">
                                <div class="page-title-right">
                                    <ol class="breadcrumb m-0">
                                        <li class="breadcrumb-item"><a href="javascript: void(0);">Transantiago App</a></li>
                                        <li class="breadcrumb-item"><a href="javascript: void(0);">Páginas</a></li>
                                        <li class="breadcrumb-item active">Buscar</li>
                                    </ol>
                                </div>
                                <h4 class="page-title">Resultado de la búsqueda</h4>
                            </div>
                        </div>
                    </div>
            <!-- end page title -->
                <div class="row">
                    <div class="card">
                            <div class="card-body">
                                <div class="d-flex justify-content-center align-items-center">
                                    <div class="d-flex flex-column text-center"> 
                                        <p><strong>Código del Paradero:</strong> {{codigoParadero}}</p>
                                        <form id="horaForm" action="/buscar" method="POST" onchange="submitForm()">
                                            <label for="time" class="form-label">Seleccione una hora:</label>
                                            <select id="time" name="time" class="form-select">
                                                <option selected disabled>Seleccione</option>
                                                <option value="05:30:00">5:30:00</option>
                                                <option value="06:00:00">6:00:00</option>
                                                <option value="06:30:00">6:30:00</option>
                                                <option value="07:00:00">7:00:00</option>
                                                <option value="07:30:00">7:30:00</option>
                                                <option value="08:00:00">8:00:00</option>
                                                <option value="08:30:00">8:30:00</option>
                                                <option value="09:00:00">9:00:00</option>
                                                <option value="09:30:00">9:30:00</option>
                                                <option value="10:00:00">10:00:00</option>
                                                <option value="10:30:00">10:30:00</option>
                                                <option value="11:00:00">11:00:00</option>
                                                <option value="11:30:00">11:30:00</option>
                                                <option value="12:00:00">12:00:00</option>
                                                <option value="12:30:00">12:30:00</option>
                                                <option value="13:00:00">13:00:00</option>
                                                <option value="13:30:00">13:30:00</option>
                                                <option value="14:00:00">14:00:00</option>
                                                <option value="14:30:00">14:30:00</option>
                                                <option value="15:00:00">15:00:00</option>
                                                <option value="15:30:00">15:30:00</option>
                                                <option value="16:00:00">16:00:00</option>
                                                <option value="16:30:00">16:30:00</option>
                                                <option value="17:00:00">17:00:00</option>
                                                <option value="17:30:00">17:30:00</option>
                                                <option value="18:00:00">18:00:00</option>
                                                <option value="18:30:00">18:30:00</option>
                                                <option value="19:00:00">19:00:00</option>
                                                <option value="19:30:00">19:30:00</option>
                                                <option value="20:00:00">20:00:00</option>
                                                <option value="20:30:00">20:30:00</option>
                                                <option value="21:00:00">21:00:00</option>
                                                <option value="21:30:00">21:30:00</option>
                                                <option value="22:00:00">22:00:00</option>
                                                <option value="22:30:00">22:30:00</option>
                                                <option value="23:00:00">23:00:00</option>
                                                <option value="23:30:00">23:30:00</option>
                                            </select>
                                            <!-- Campo oculto para un valor predeterminado -->
                                            <input type="hidden" name="codigoParadero" value={{codigoParadero}}>
                                        </form>
                                        <p class=""><strong>Hora:</strong> {{hora}}</p>
                                        <div class="w-75 h-75" id="map"></div>
                                     </div>
                                </div>
                            </div>
                        </div>
                </div>
                <div class="row">
                    <div class="card">
                        <div class="card-body">
                            <form id="puntoForm">
                                <label for="inicio">Punto Inicial:</label>
                                <select id="inicio">
                                    {{#each puntos}}
                                        <option value="{{@index}}">{{this.properties.description}}</option>
                                    {{/each}}
                                </select>

                                <label for="destino">Punto Destino:</label>
                                <select id="destino">
                                    {{#each puntos}}
                                        <option value="{{@index}}">{{this.properties.description}}</option>
                                    {{/each}}
                                </select>

                                <button type="button" onclick="actualizarMapa()">Mostrar Ruta</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- END Contenido dinámico -->
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script>
        const lat = {{latitud}};
        const lon = {{longitud}};
        const zoomLevel = 16;

        const map = L.map('map', {
            center: [lat, lon],
            zoom: zoomLevel,
            minZoom: 12,
            maxBounds: L.latLngBounds(
                L.latLng(-33.0, -71.0),
                L.latLng(-33.7, -70.3)
            )
        });

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        // Define un nuevo icono personalizado para el paradero de bus
        const busStopIcon = L.icon({
            iconUrl: '{{baseUrl}}/images/busStop.svg',  // Ruta de la imagen del icono de paradero
            iconSize: [32, 32],  // Tamaño del icono (ancho, alto)
            iconAnchor: [16, 16],  // Punto del icono que corresponde a la posición en el mapa
            popupAnchor: [0, -32]  // Punto donde aparece el popup en relación al icono
        });

        // Crea un marcador con el icono de paradero de bus
        const busStopMarker = L.marker([lat, lon], { icon: busStopIcon }).addTo(map).bindPopup(`<b>Paradero {{codigoParadero}}</br>{{latitud}}, {{longitud}}`).openPopup();

        // GeoJSON desde el servidor
        var geoJson = {{{geoJson}}};
        
        let points = geoJson.features.filter(f => f.geometry.type === "Point");
        let lines = geoJson.features.filter(f => f.geometry.type === "LineString");

        // Centrar el mapa en el primer punto, si existe
        if (points.length > 0) {
            let [lng, lat] = points[0].geometry.coordinates;
            map.setView([lat, lng], 13);
        }
    </script>

    <script>
        function submitForm() {
            document.getElementById('horaForm').submit();
        }

        // Array para almacenar los marcadores y polilíneas
        var marcadores = [];
        var polilineas = [];

        function actualizarMapa() {
            let inicioIdx = document.getElementById("inicio").value;
            let destinoIdx = document.getElementById("destino").value;

            if (inicioIdx !== "" && destinoIdx !== "") {
                // Limpia cualquier marcador y línea existente
                map.eachLayer(layer => {
                    if (layer instanceof L.Polyline || layer instanceof L.CircleMarker) {
                        map.removeLayer(layer);
                    }
                });

                let inicio = points[inicioIdx].geometry.coordinates;
                let destino = points[destinoIdx].geometry.coordinates;

                L.marker([inicio[1], inicio[0]], { icon: busStopIcon }).addTo(map).bindPopup(`<b>Paradero {{codigoParadero}}</br>${inicio[1]}, ${inicio[0]}`).openPopup();
                L.marker([destino[1], destino[0]], { icon: busStopIcon }).addTo(map).bindPopup(`<b>Paradero {{codigoParadero}}</br>${destino[1]}, ${destino[0]}`).openPopup();

                lines.forEach(line => {
                    let coords = line.geometry.coordinates;
                    if ((coords[0][0] === inicio[0] && coords[0][1] === inicio[1] &&
                         coords[coords.length - 1][0] === destino[0] && coords[coords.length - 1][1] === destino[1]) ||
                        (coords[0][0] === destino[0] && coords[0][1] === destino[1] &&
                         coords[coords.length - 1][0] === inicio[0] && coords[coords.length - 1][1] === inicio[1])) {
                        L.polyline(coords.map(c => [c[1], c[0]]), { color: 'blue' }).addTo(map);
                    }
                });

                map.setView([inicio[1], inicio[0]], 13);
            }
        }
    </script>
{{/if}}
